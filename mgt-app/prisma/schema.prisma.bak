generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum AntisocialCheckStatus {
  unchecked
  checked
  check_exception
  monitor_checked
}

enum ChecklistType {
  common
  detail
}

enum ChecklistStatusEnum {
  not_created
  completed
  not_required
}

//// base entities

model Client {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  vendors             ClientVendor[]
  csp                 ClientCsp[]
  outsourcingPartners ClientOutsourcingPartner[]

  vendorServiceCspAssignments                  VendorServiceCspAssignment[]
  outsourcingServiceCspAssignments             OutsourcingServiceCspAssignment[]
  vendorServiceChecklists                      VendorServiceChecklist[]
  CspServiceWithVendorServiceChecklist         CspServiceWithVendorServiceChecklist[]
  OutsourcingServiceWithVendorServiceChecklist OutsourcingServiceWithVendorServiceChecklist[]
}

model Vendor {
  id                    Int                   @id @default(autoincrement())
  name                  String                @unique
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  antisocialCheckStatus AntisocialCheckStatus @default(unchecked)

  clients        ClientVendor[]
  vendorServices VendorService[] @relation("VendorToVendorService")

  vendorServiceCspAssignments VendorServiceCspAssignment[] @relation("VendorToVendorServiceCspAssignment")
  vendorServiceChecklists     VendorServiceChecklist[]
}

model VendorService {
  id                                    Int                                    @id @default(autoincrement())
  name                                  String                                 @unique
  vendorId                              Int
  createdAt                             DateTime                               @default(now())
  updatedAt                             DateTime                               @updatedAt
  vendor                                Vendor                                 @relation("VendorToVendorService", fields: [vendorId], references: [id], onDelete: Cascade)
  vendorServiceCspAssignments           VendorServiceCspAssignment[]           @relation("VendorServiceToVendorServiceCspAssignment")
  vendorServiceChecklists               VendorServiceChecklist[]
  cspServiceWithVendorServiceChecklists CspServiceWithVendorServiceChecklist[]

  @@index([vendorId])
}

model Csp {
  id                    Int                   @id @default(autoincrement())
  name                  String                @unique
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  antisocialCheckStatus AntisocialCheckStatus @default(unchecked)

  clients     ClientCsp[]
  cspServices CspService[] @relation("CspToCspService")

  outsourcingServiceCspAssignments      OutsourcingServiceCspAssignment[]
  vendorServiceCspAssignments           VendorServiceCspAssignment[]
  vendorServiceChecklists               VendorServiceChecklist[]
  cspServiceWithVendorServiceChecklists CspServiceWithVendorServiceChecklist[]
}

model CspService {
  id                                    Int                                    @id @default(autoincrement())
  name                                  String                                 @unique
  cspId                                 Int
  createdAt                             DateTime                               @default(now())
  updatedAt                             DateTime                               @updatedAt
  csp                                   Csp                                    @relation("CspToCspService", fields: [cspId], references: [id], onDelete: Cascade)
  outsourcingServiceCspAssignments      OutsourcingServiceCspAssignment[]
  vendorServiceCspAssignments           VendorServiceCspAssignment[]
  cspServiceWithVendorServiceChecklists CspServiceWithVendorServiceChecklist[]

  @@index([cspId])
}

model OutsourcingPartner {
  id                    Int                   @id @default(autoincrement())
  name                  String                @unique
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  antisocialCheckStatus AntisocialCheckStatus @default(unchecked)

  clients                                       ClientOutsourcingPartner[]
  outsourcingServices                           OutsourcingService[]
  outsourcingServiceWithVendorServiceChecklists OutsourcingServiceWithVendorServiceChecklist[]
  outsourcingServiceCspAssignments OutsourcingServiceCspAssignment[] @relation("OutsourcingPartnerToOutsourcingServiceCspAssignment")
}

model OutsourcingService {
  id                                            Int                                            @id @default(autoincrement())
  name                                          String                                         @unique
  outsourcingPartnerId                          Int
  createdAt                                     DateTime                                       @default(now())
  updatedAt                                     DateTime                                       @updatedAt
  outsourcingPartner                            OutsourcingPartner                             @relation(fields: [outsourcingPartnerId], references: [id], onDelete: Cascade)
  outsourcingServiceCspAssignments              OutsourcingServiceCspAssignment[]              @relation("OutsourcingServiceToOutsourcingServiceCspAssignment")
  outsourcingServiceWithVendorServiceChecklists OutsourcingServiceWithVendorServiceChecklist[]

  @@index([outsourcingPartnerId])
}

//// relation with client

model ClientVendor {
  clientId Int
  vendorId Int
  client   Client @relation(fields: [clientId], references: [id], onDelete: Cascade)
  vendor   Vendor @relation(fields: [vendorId], references: [id], onDelete: Cascade)

  @@id([clientId, vendorId])
  @@index([vendorId])
}

model ClientCsp {
  clientId Int
  cspId    Int
  client   Client @relation(fields: [clientId], references: [id], onDelete: Cascade)
  csp      Csp    @relation(fields: [cspId], references: [id], onDelete: Cascade)

  @@id([cspId, clientId])
  @@index([cspId])
}

model ClientOutsourcingPartner {
  clientId             Int
  outsourcingPartnerId Int
  client               Client             @relation(fields: [clientId], references: [id], onDelete: Cascade)
  outsourcingPartner   OutsourcingPartner @relation(fields: [outsourcingPartnerId], references: [id], onDelete: Cascade)

  @@id([clientId, outsourcingPartnerId])
  @@index([outsourcingPartnerId])
}

//// assignments

model VendorServiceCspAssignment {
  id                                    Int                                    @id @default(autoincrement())
  clientId                              Int
  vendorId                              Int
  vendorServiceId                       Int
  cspId                                 Int
  cspServiceId                          Int
  createdAt                             DateTime                               @default(now())
  updatedAt                             DateTime                               @updatedAt
  client                                Client                                 @relation(fields: [clientId], references: [id], onDelete: Cascade)
  vendor                                Vendor                                 @relation("VendorToVendorServiceCspAssignment", fields: [vendorId], references: [id], onDelete: Cascade)
  vendorService                         VendorService                          @relation("VendorServiceToVendorServiceCspAssignment", fields: [vendorServiceId], references: [id], onDelete: Cascade)
  csp                                   Csp                                    @relation(fields: [cspId], references: [id], onDelete: Cascade)
  cspService                            CspService                             @relation(fields: [cspServiceId], references: [id], onDelete: Cascade)
  vendorServiceChecklists               VendorServiceChecklist[]
  cspServiceWithVendorServiceChecklists CspServiceWithVendorServiceChecklist[]

  @@unique([clientId, vendorServiceId, cspId, cspServiceId])
  @@index([clientId])
  @@index([cspId])
  @@index([cspServiceId])
  @@index([vendorId])
  @@index([vendorServiceId])
}

model OutsourcingServiceCspAssignment {
  id                                            Int                                            @id @default(autoincrement())
  clientId                                      Int
  outsourcingPartnerId                          Int
  outsourcingServiceId                          Int
  cspId                                         Int
  cspServiceId                                  Int
  createdAt                                     DateTime                                       @default(now())
  updatedAt                                     DateTime                                       @updatedAt
  client                                        Client                                         @relation(fields: [clientId], references: [id], onDelete: Cascade)
  outsourcingPartner                            OutsourcingPartner                             @relation("OutsourcingPartnerToOutsourcingServiceCspAssignment", fields: [outsourcingPartnerId], references: [id], onDelete: Cascade)
  outsourcingService                            OutsourcingService                             @relation("OutsourcingServiceToOutsourcingServiceCspAssignment", fields: [outsourcingServiceId], references: [id], onDelete: Cascade)
  csp                                           Csp                                            @relation(fields: [cspId], references: [id], onDelete: Cascade)
  cspService                                    CspService                                     @relation(fields: [cspServiceId], references: [id], onDelete: Cascade)
  outsourcingServiceWithVendorServiceChecklists OutsourcingServiceWithVendorServiceChecklist[]

  @@unique([clientId, outsourcingServiceId, cspId, cspServiceId])
  @@index([clientId])
  @@index([cspId])
  @@index([cspServiceId])
  @@index([outsourcingPartnerId])
  @@index([outsourcingServiceId])
}

model ChecklistCycle {
  id   Int    @id @default(autoincrement())
  name String @unique

  startDate DateTime
  endDate   DateTime

  isActive Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//// checklist
// vendorService checklist
model VendorServiceChecklist {
  id               Int                 @id @default(autoincrement())
  checklistCycleId Int
  type             ChecklistType
  status           ChecklistStatusEnum

  clientId                     Int
  vendorId                     Int
  vendorServiceId              Int
  cspId                        Int?
  vendorServiceCspAssignmentId Int?

  completedAt DateTime?
  isExamined  Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  client                     Client                      @relation(fields: [clientId], references: [id], onDelete: Cascade)
  vendor                     Vendor                      @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  vendorService              VendorService               @relation(fields: [vendorServiceId], references: [id], onDelete: Cascade)
  csp                        Csp?                        @relation(fields: [cspId], references: [id], onDelete: Cascade)
  vendorServiceCspAssignment VendorServiceCspAssignment? @relation(fields: [vendorServiceCspAssignmentId], references: [id], onDelete: Cascade)

  @@unique([clientId, vendorServiceId])
}

// cspService checklist
model CspServiceWithVendorServiceChecklist {
  id               Int                 @id @default(autoincrement())
  checklistCycleId Int
  type             ChecklistType
  status           ChecklistStatusEnum

  clientId                     Int
  cspId                        Int
  cspServiceId                 Int
  vendorServiceId              Int
  vendorServiceCspAssignmentId Int

  completedAt DateTime?
  isExamined  Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  client                     Client                     @relation(fields: [clientId], references: [id], onDelete: Cascade)
  csp                        Csp                        @relation(fields: [cspId], references: [id], onDelete: Cascade)
  cspService                 CspService                 @relation(fields: [cspServiceId], references: [id], onDelete: Cascade)
  vendorService              VendorService              @relation(fields: [vendorServiceId], references: [id], onDelete: Cascade)
  vendorServiceCspAssignment VendorServiceCspAssignment @relation(fields: [vendorServiceCspAssignmentId], references: [id], onDelete: Cascade)

  @@unique([clientId, vendorServiceId, cspServiceId])
}

// outsourcingService checklist
model OutsourcingServiceWithVendorServiceChecklist {
  id               Int                 @id @default(autoincrement())
  checklistCycleId Int
  type             ChecklistType
  status           ChecklistStatusEnum

  clientId                          Int
  outsourcingPartnerId              Int
  outsourcingServiceId              Int
  outsourcingServiceCspAssignmentId Int

  completedAt DateTime?
  isExamined  Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  client                          Client                          @relation(fields: [clientId], references: [id], onDelete: Cascade)
  outsourcingPartner              OutsourcingPartner              @relation(fields: [outsourcingPartnerId], references: [id], onDelete: Cascade)
  outsourcingService              OutsourcingService              @relation(fields: [outsourcingServiceId], references: [id], map: "outsourcingServiceConstraint", onDelete: Cascade)
  outsourcingServiceCspAssignment OutsourcingServiceCspAssignment @relation(fields: [outsourcingServiceCspAssignmentId], references: [id], onDelete: Cascade)

  @@unique([clientId, outsourcingServiceId])
}
