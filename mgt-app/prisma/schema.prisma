generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum AntisocialCheckStatus {
  unchecked
  checked
  check_exception
  monitor_checked
}

enum ChecklistStatusEnum {
  not_created
  completed
  not_required
  is_examined
}

//// base entities
model Client {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  summaryVendorServices SummaryVendorService[]
  summaryVendorServiceCspService SummaryVendorServiceCspService[]
  summaryOutsourcingServiceCspService SummaryOutsourcingServiceCspService[]
}

model Vendor {
  id                    Int                   @id @default(autoincrement())
  name                  String                @unique
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  antisocialCheckStatus AntisocialCheckStatus @default(unchecked)

  vendorServices VendorService[] @relation("VendorToVendorService")
  summaryVendorServices SummaryVendorService[]
  summaryVendorServiceCspServices SummaryVendorServiceCspService[]
}

model VendorService {
  id                                    Int                                    @id @default(autoincrement())
  name                                  String                                 @unique
  vendorId                              Int
  createdAt                             DateTime                               @default(now())
  updatedAt                             DateTime                               @updatedAt
  vendor                                Vendor                                 @relation("VendorToVendorService", fields: [vendorId], references: [id], onDelete: Cascade)

  summaryVendorServices SummaryVendorService[]
  summaryVendorServiceCspServices SummaryVendorServiceCspService[]
}

model Csp {
  id                    Int                   @id @default(autoincrement())
  name                  String                @unique
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  antisocialCheckStatus AntisocialCheckStatus @default(unchecked)

  cspServices CspService[] @relation("CspToCspService")
  summaryVendorServiceCspService SummaryVendorServiceCspService[]
  summaryOutsourcingServiceCspService SummaryOutsourcingServiceCspService[]
}

model CspService {
  id                                    Int                                    @id @default(autoincrement())
  name                                  String                                 @unique
  cspId                                 Int
  createdAt                             DateTime                               @default(now())
  updatedAt                             DateTime                               @updatedAt
  csp                                   Csp                                    @relation("CspToCspService", fields: [cspId], references: [id], onDelete: Cascade)

  summaryVendorServiceCspService SummaryVendorServiceCspService[]
  summaryOutsourcingServiceCspService SummaryOutsourcingServiceCspService[]
}

model OutsourcingPartner {
  id                    Int                   @id @default(autoincrement())
  name                  String                @unique
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  antisocialCheckStatus AntisocialCheckStatus @default(unchecked)

  outsourcingServices                           OutsourcingService[]
  summaryOutsourcingServiceCspService SummaryOutsourcingServiceCspService[]
}

model OutsourcingService {
  id                                            Int                                            @id @default(autoincrement())
  name                                          String                                         @unique
  outsourcingPartnerId                          Int
  createdAt                                     DateTime                                       @default(now())
  updatedAt                                     DateTime                                       @updatedAt
  outsourcingPartner                            OutsourcingPartner                             @relation(fields: [outsourcingPartnerId], references: [id], onDelete: Cascade)

  summaryOutsourcingServiceCspService SummaryOutsourcingServiceCspService[]
}

model Cycle {
  id   Int    @id @default(autoincrement())
  name String @unique

  startDate DateTime
  endDate   DateTime
  isActive Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  summaryVendorServices SummaryVendorService[]
  summaryVendorServiceCspService SummaryVendorServiceCspService[]
  summaryOutsourcingServiceCspService SummaryOutsourcingServiceCspService[]
}

//// Summary
// vendorService Summary
model SummaryVendorService {
  id               Int                 @id @default(autoincrement())
  cycleId Int
  clientId  Int
  vendorId  Int
  vendorServiceId Int

  vendorAntisocialCheckStatus AntisocialCheckStatus @default(unchecked)
  vendorCommonChecklistStatus           ChecklistStatusEnum @default(not_created)
  vendorDetailChecklistStatus           ChecklistStatusEnum @default(not_created)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  cycle Cycle @relation(fields: [cycleId], references: [id], onDelete: Cascade)
  client Client @relation(fields: [clientId], references: [id], onDelete: Cascade)
  vendor Vendor @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  vendorService VendorService @relation(fields: [vendorServiceId], references: [id], onDelete: Cascade)

  @@unique([clientId, vendorServiceId])
}

// cspService Summary
model SummaryVendorServiceCspService {
  id               Int                 @id @default(autoincrement())
  cycleId Int
  clientId                     Int
  vendorId                     Int
  vendorServiceId              Int
  cspId                        Int
  cspServiceId                 Int

  vendorAntisocialCheckStatus AntisocialCheckStatus @default(unchecked)
  vendorCommonChecklistStatus           ChecklistStatusEnum @default(not_created)
  vendorDetailChecklistStatus           ChecklistStatusEnum @default(not_created)

  cspAntisocialCheckStatus AntisocialCheckStatus @default(unchecked)
  cspCommonChecklistStatus           ChecklistStatusEnum @default(not_created)
  cspDetailChecklistStatus           ChecklistStatusEnum @default(not_created)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  cycle Cycle @relation(fields: [cycleId], references: [id], onDelete: Cascade)
  client                     Client                     @relation(fields: [clientId], references: [id], onDelete: Cascade)
  vendor                     Vendor                     @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  vendorService              VendorService              @relation(fields: [vendorServiceId], references: [id], onDelete: Cascade)
  csp                        Csp                        @relation(fields: [cspId], references: [id], onDelete: Cascade)
  cspService                 CspService                 @relation(fields: [cspServiceId], references: [id], onDelete: Cascade)

  @@unique([clientId, vendorServiceId, cspServiceId])
}

// outsourcingService Summary
model SummaryOutsourcingServiceCspService {
  id               Int                 @id @default(autoincrement())
  cycleId Int
  clientId                          Int
  outsourcingPartnerId              Int
  outsourcingServiceId              Int
  cspId Int
  cspServiceId Int

  outsourcingPartnerAntisocialCheckStatus AntisocialCheckStatus @default(unchecked)

  cspAntisocialCheckStatus AntisocialCheckStatus @default(unchecked)
  cspServiceCommonChecklistStatus           ChecklistStatusEnum @default(not_created)
  cspServiceDetailChecklistStatus           ChecklistStatusEnum @default(not_created)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  cycle Cycle @relation(fields: [cycleId], references: [id], onDelete: Cascade)
  client                          Client                          @relation(fields: [clientId], references: [id], onDelete: Cascade)
  outsourcingPartner              OutsourcingPartner              @relation(fields: [outsourcingPartnerId], references: [id], onDelete: Cascade)
  outsourcingService              OutsourcingService              @relation(fields: [outsourcingServiceId], references: [id], onDelete: Cascade)
  csp                 Csp                 @relation(fields: [cspId], references: [id], onDelete: Cascade)
  cspService                 CspService                 @relation(fields: [cspServiceId], references: [id], onDelete: Cascade)

  @@unique([clientId, outsourcingServiceId, cspServiceId])
}
